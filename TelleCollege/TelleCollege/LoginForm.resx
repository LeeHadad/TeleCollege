<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_errorPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BOQx89ilNZETVhegRuLEqP45W7MV38d7AvIY2v6csboANRInRfXPWZtvxuvy0wH52N7wR+oCVEWcENU/
        GebH8fIz+W1+WVA+Vj6mj/qRZ9UFqIk4Gap/csn8Vr78at5dZgfkz+Zj+IY/8jx1AWogToTqnzzAHM6T
        E/pyTG/O6j9xzcHvE8i/y3+T/zZ/xmAf8kB1AWogToLqn1zTTOqP3n988cg9lywevOvSs+af8/9J+ORG
        6gIMSZwA1T9Jcgh1AYYkNl/1T5IcSl2AIYiNV/2TJIdUF2AIYtNV/yTJodUF6JPY8K8JVf8kyaHNXPQ1
        TXpC18RmX7e0+SRJDul1TXpC18Rm/+rK5pMkOZS/2qQndEls9LPCv1naeJIkhzRz0rOaNIWuiE1+69Km
        kyRZg29t0hS6Ijb5j1c2nSTJof3jJk2hC2KDL13ZcJIka/HbmnSFtonNfcPKZpMkWYsnm3SFtonNfc/K
        ZpMkWYvvbdIV2iY297dXNpskyVr8r026QpvExn5t+KWljSZJsib/X3hhk7bQFrGp3760ySRJ1ujlTdpC
        W8SmftfKJpMkWZv/qElbaIvY1OtXNpkkydq8sUlbaIvY1B9a2WSSJGvTeOC2iU396ZVNJkmyNn+mSVto
        i9jUd65sMkmStflvmrSFtohN/Zcrm0ySZG3+XJO20BaxqT+2sskkSdbmm5u0hbaITb1xZZNJkqzN1zdp
        C20Rm/qKlU0mSbI2fQ9A28SmXrayySRJ1uZlTdpCW5z51LG/HRv7lZWNJkmyFr+SuapJW2iT2Nw/Xdls
        kiRr8U+bdIW2ic390MpmkyRZix9q0hXa5swnj/1EYcNJkhzeh4/9RJOu0DZnHjz2quKmkyQ5tA8ee3WT
        rtA2+x+56LXxG1Z540mSHMrITfv3XHR9k67QNvu/tPfOM792UXnzSZIcyshN+x/cu7VJV2ibL77/Gb+x
        f3qvvPkkSQ5k5qbIUQ816Qptsv/LexfE5u5/8fZnLM58snwCSJLs3chJmZsiR/31/qmL/laTttAW+3fu
        PTc2Nzd4ceY/exmAJFmJkZPO5af9u/ae36QttMX+HXtXPb7Bv+xlAJJkHWZOejw/3bn3D5u0hbbYv33v
        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
</value>
  </data>
</root>